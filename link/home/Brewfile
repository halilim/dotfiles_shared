# frozen_string_literal: true

tap 'beeftornado/rmtree'

brew 'coreutils' # gdate, gnumfmt, realpath, ghead, gtail
brew 'moreutils' # ?
brew 'findutils' # gfind
brew 'gnu-sed' # gsed

brew 'act' # Run GitHub Actions locally https://github.com/nektos/act
brew 'bash' # macOS one is ancient
brew 'bashdb' # Bash debugger
brew 'bat' # cat alternative in Rust (regular use + vim fzf preview)

brew 'colima' # Docker alternative
brew 'docker' # Required for Docker runtime
brew 'docker-buildx'
brew 'docker-compose'
brew 'docker-credential-helper'

brew 'dust' # du in Rust with percentage bars
brew 'eza' # ls alternative in Rust
brew 'fd'
brew 'fzf'

brew 'git'
brew 'git-delta'
brew 'gh' # https://cli.github.com/
brew 'pre-commit'

brew 'hadolint' # Dockerfile linter, validates inline bash using ShellCheck

brew 'htop'
brew 'httpie'
brew 'jq'

brew 'lazydocker'
brew 'lazygit'

brew 'media-info'
brew 'miller' # Data tools for CSV, TSV, and tabular JSON

brew 'ncdu'

brew 'nginx' # For adminer
brew 'php' # For adminer

brew 'node' # coc.nvim & probably others

brew 'patchutils'

brew 'ripgrep'
brew 'rsync' # MacOS one is ancient

# Ruby
brew 'libxml2' # Nokogiri
brew 'libxslt' # Nokogiri
brew 'openssl'
brew 'pkg-config'
brew 'rbspy' # Profiler, for RubyMine
brew 'readline'
brew 'shared-mime-info' # mimemagic gem

brew 'shellcheck'
tap 'shellspec/shellspec'
brew 'shellspec'
brew 'shfmt' # VS Code extension shell-format

tap 'teamookla/speedtest'
brew 'speedtest'

brew 'terminal-notifier'
brew 'tldr'
brew 'tree'
# brew 'wget'
brew 'yq'

# In case macOS falls behind here too
brew 'zsh'
at_exit { system '~/bin/switch_to_homebrew_zsh' }

# Start: Casks

cask 'font-sauce-code-pro-nerd-font' # Also works for Powerlevel10k

cask 'qlcolorcode' # Source code files with syntax highlighting
cask 'qlstephen' # README, Makefile etc.
cask 'qlvideo' # Finder thumbnails & Quick Look previews and thumbnails
cask 'quicklook-json'

cask 'kdiff3' # For Sourcetree
cask 'sourcetree'

# Vim
brew 'editorconfig' # Used by vim plugin
brew 'neovim'
cask 'macvim'

tap 'universal-ctags/universal-ctags'
brew 'universal-ctags'

# End: Casks

brewfile_custom = Pathname.new(File.readlink(__FILE__)).dirname.dirname.dirname.dirname
                          .join('custom', 'includes', 'brewfile_custom.rb')
instance_eval File.read(brewfile_custom), __FILE__, __LINE__ + 1 if brewfile_custom.exist?
